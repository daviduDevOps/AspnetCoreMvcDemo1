pipeline {
  agent any
  stages {
      stage('Get Environment Details') {
          steps {
            echo 'Development Deployment'
            //build 'Dev'
            sleep 10
          }
      }
      stage('download artifacts') {
          steps {
          echo 'Downloading Artifacts from Artifactory Server'
          sleep 10
          }
     	}
     	stage('Upload artifacts to S3') {
         	steps {
         	echo 'Uploading to S3'
         	sleep 10
         	}
     	}
     	stage('deploy Messaging.css.mcafee.com') {
         	steps {
             	echo 'deploy Messaging.css.mcafee.com'
             	build job:'Messaging.css.mcafee.com' ,
             	parameters:[
             	string(name: 'BranchName',value: env.BranchName),
             	string(name: 'BuildID',value: env.BuildID),
              string(name: 'EnvType',value: env.EnvName),
              string(name: 'DeployType',value: env.DeployType)
             	]
             	sleep 10
         	}
     	}
         stage('deploy Cohort.css.mcafee.com') {
         	steps {
             	echo 'deploy Cohort.css.mcafee.com'
             	build job:'Cohort.css.mcafee.com' ,
             	parameters:[
             	string(name: 'BranchName',value: env.BranchName),
             	string(name: 'BuildID',value: env.BuildID),
              string(name: 'EnvType',value: env.EnvName),
              string(name: 'DeployType',value: env.DeployType)
             	]
             	sleep 10
         	}
     	}
         stage('deploy Eventstore.css.mcafee.com') {
         	steps {
             	echo 'deploy Eventstore.css.mcafee.com'
             	build job:'Eventstore.css.mcafee.com' ,
             	parameters:[
             	string(name: 'BranchName',value: env.BranchName),
             	string(name: 'BuildID',value: env.BuildID),
              string(name: 'EnvType',value: env.EnvName),
              string(name: 'DeployType',value: env.DeployType)
             	]
             	sleep 10
         	}
     	}
         stage('deploy Policyorchestration.css.mcafee.com') {
         	steps {
             	echo 'deploy Policyorchestration.css.mcafee.com'
             	build job:'Policyorchestration.css.mcafee.com' ,
             	parameters:[
             	string(name: 'BranchName',value: env.BranchName),
             	string(name: 'BuildID',value: env.BuildID),
              string(name: 'EnvType',value: env.EnvName),
              string(name: 'DeployType',value: env.DeployType)
             	]
             	sleep 10
         	}
     	}
         stage('deploy Enrollment.css.mcafee.com') {
         	steps {
             	echo 'deploy Enrollment.css.mcafee.com'
             	build job:'Enrollment.css.mcafee.com' ,
             	parameters:[
             	string(name: 'BranchName',value: env.BranchName),
             	string(name: 'BuildID',value: env.BuildID),
              string(name: 'EnvType',value: env.EnvName),
              string(name: 'DeployType',value: env.DeployType)
             	]
             	sleep 10
         	}
     	}
         stage('deploy Ngmconsole.css.mcafee.com') {
         	steps {
             	echo 'deploy Ngmconsole.css.mcafee.com'
             	build job:'Ngmconsole.int.mcafee.com' ,
             	parameters:[
             	string(name: 'BranchName',value: env.BranchName),
             	string(name: 'BuildID',value: env.BuildID),
              string(name: 'EnvType',value: env.EnvName),
              string(name: 'DeployType',value: env.DeployType)
             	]
             	sleep 10
         	}
     	}
      stage('deploy NGM DB') {
         	steps {
             	echo 'deploy Datascripts'
             	#build job:'Ngm.database.deployment' ,
             	parameters:[
             	string(name: 'BranchName',value: env.BranchName),
             	string(name: 'BuildID',value: env.BuildID),
              string(name: 'EnvType',value: env.EnvName)
             	]
             	sleep 10
         	}
     	}
    }
}
